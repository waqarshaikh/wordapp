plugins {
    id("com.github.johnrengelman.shadow") version "7.1.2"
    id("io.micronaut.application") version "3.3.2"
    id("net.linguica.maven-settings") version "0.5"
}

version = "0.1"
group = "co.incubyte"

repositories {
    mavenCentral()
}

dependencies {
    annotationProcessor("io.micronaut.data:micronaut-data-processor")

    annotationProcessor("io.micronaut:micronaut-http-validation")
    runtimeOnly("mysql:mysql-connector-java")
    annotationProcessor("io.micronaut:micronaut-validation")
    annotationProcessor("org.hibernate:hibernate-jpamodelgen:$hibernateModelGenVersion")

    implementation("io.micronaut:micronaut-inject")
    implementation("io.micronaut:micronaut-http-client")
    implementation("io.micronaut:micronaut-jackson-databind")
    implementation("io.micronaut.data:micronaut-data-hibernate-jpa")
    implementation("io.micronaut:micronaut-runtime")
    implementation("jakarta.annotation:jakarta.annotation-api")
    runtimeOnly("ch.qos.logback:logback-classic")
    implementation("io.micronaut.beanvalidation:micronaut-hibernate-validator")
    implementation 'javax.inject:javax.inject:1'
    implementation("io.micronaut.rxjava3:micronaut-rxjava3")

    implementation("io.micronaut.sql:micronaut-jdbc-hikari")
    implementation("io.micronaut.sql:micronaut-hibernate-jpa")
    runtimeOnly("mysql:mysql-connector-java")

    testAnnotationProcessor("io.micronaut:micronaut-inject-java")
    testImplementation("org.testcontainers:junit-jupiter")
    testImplementation("org.testcontainers:mysql")
    testImplementation("org.testcontainers:testcontainers")
    testImplementation("org.junit.jupiter:junit-jupiter-api")
    testImplementation("io.micronaut.test:micronaut-test-junit5")
    testImplementation("org.junit.jupiter:junit-jupiter-params")
    testImplementation("org.mockito:mockito-core")
    testImplementation("org.assertj:assertj-core")
    testImplementation 'io.rest-assured:rest-assured:4.4.0'
    testImplementation "com.github.tomakehurst:wiremock-jre8:$wireMockVersion"
    testRuntimeOnly("io.micronaut.sql:micronaut-jdbc-hikari")
    testRuntimeOnly("mysql:mysql-connector-java")

}


application {
    mainClass.set("co.incubyte.Application")
}
java {
    sourceCompatibility = JavaVersion.toVersion("11")
    targetCompatibility = JavaVersion.toVersion("11")
}

graalvmNative.toolchainDetection = false
micronaut {
    runtime("netty")
    testRuntime("junit5")
    processing {
        incremental(true)
        annotations("co.incubyte.*")
    }
}

test {
    useJUnitPlatform()
}


